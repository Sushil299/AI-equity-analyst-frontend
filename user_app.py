# -*- coding: utf-8 -*-
"""user_app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-870mHldiZ9svkczmIvpy1jMZH4KKxJk
"""

import streamlit as st
import requests
from PIL import Image
import pandas as pd

# Backend URLs
BACKEND_URL = "https://ai-equity-analyst.onrender.com"
REDDIT_BACKEND_URL = "https://reddit-opinion-backend.onrender.com/"

# Page configuration
st.set_page_config(
    page_title="AI Equity Analyst",
    page_icon="üìà",
    layout="wide",
    initial_sidebar_state="collapsed"  # Collapsed by default for mobile
)

# Add custom CSS with mobile responsiveness
st.markdown("""
    <style>
    /* Base styles */
    .main-header {
        font-size: 1.8rem;
        font-weight: 700;
        color: #1E88E5;
        margin-bottom: 1rem;
    }
    .subheader {
        font-size: 1.2rem;
        font-weight: 600;
        color: #424242;
        margin-bottom: 0.5rem;
    }
    .card {
        padding: 1rem;
        border-radius: 0.5rem;
        background-color: #f8f9fa;
        border-left: 4px solid #1E88E5;
        margin-bottom: 1rem;
        overflow-wrap: break-word;
        word-wrap: break-word;
    }
    .info-text {
        color: #424242;
        font-size: 0.9rem;
    }
    .metric-card {
        background-color: #f1f8fe;
        padding: 0.75rem;
        border-radius: 0.5rem;
        text-align: center;
    }

    /* Mobile optimizations */
    @media (max-width: 768px) {
        .main-header {
            font-size: 1.5rem;
        }
        .subheader {
            font-size: 1.1rem;
        }
        .card {
            padding: 0.75rem;
        }
        .stButton>button {
            width: 100%;
            margin-bottom: 0.5rem;
        }
    }

    /* Touch-friendly buttons */
    .stButton>button {
        min-height: 2.5rem;
    }

    /* Better spacing for mobile */
    .mobile-spacer {
        margin-top: 0.5rem;
        margin-bottom: 1rem;
    }

    /* Fix for overflow text on mobile */
    div[data-testid="stVerticalBlock"] {
        width: 100%;
        overflow-wrap: break-word;
        word-wrap: break-word;
    }
    </style>
""", unsafe_allow_html=True)

# Compact sidebar with essential info
with st.sidebar:
    st.markdown('<p class="subheader">AI Equity Analyst</p>', unsafe_allow_html=True)
    st.markdown("---")
    st.markdown("### Data Sources")
    st.markdown("- Financial Statements")
    st.markdown("- Analyst Calls")
    st.markdown("- Reddit & News")

    # Collapse additional info for mobile
    with st.expander("About"):
        st.info("AI-powered equity research and sentiment analysis")

# Main content - more compact for mobile
st.markdown('<p class="main-header">AI Equity Analyst</p>', unsafe_allow_html=True)

# Company Selection UI
try:
    with st.spinner("Loading companies..."):
        companies_response = requests.get(f"{BACKEND_URL}/companies")
        companies_response.raise_for_status()
        company_list = companies_response.json().get("companies", [])
except requests.exceptions.RequestException:
    company_list = []
    st.error("‚ùå Failed to load companies")

if company_list:
    # Simplified company selector for mobile
    company_name = st.selectbox(
        "Select company",
        company_list,
        index=0
    )

    # Mobile-friendly analysis options
    st.markdown('<div class="mobile-spacer"></div>', unsafe_allow_html=True)

    # Use a mobile-friendly tab interface
    tabs = st.tabs(["üìë Research", "üìù Reddit", "üì∞ News"])

    # Research Report Tab
    with tabs[0]:
        st.markdown("### Research Report")

        if st.button("Generate Report", key="research_btn", use_container_width=True):
            report_placeholder = st.empty()
            with st.spinner("Generating report..."):
                try:
                    response = requests.get(f"{BACKEND_URL}/summary/{company_name}")
                    response.raise_for_status()
                    analysis = response.json().get("final_summary", "")
                    if analysis:
                        report_placeholder.markdown(f'<div class="card">{analysis}</div>', unsafe_allow_html=True)
                    else:
                        report_placeholder.warning("‚ö†Ô∏è No analysis available")
                except requests.exceptions.RequestException:
                    report_placeholder.error("‚ùå Failed to fetch analysis")

    # Reddit Opinion Tab
    with tabs[1]:
        st.markdown("### Reddit Sentiment")

        if st.button("Get Sentiment", key="reddit_btn", use_container_width=True):
            reddit_placeholder = st.empty()
            with st.spinner("Analyzing Reddit..."):
                try:
                    response = requests.get(f"{REDDIT_BACKEND_URL}/analyze_stock/{company_name}")
                    response.raise_for_status()
                    reddit_summary = response.json().get("reddit_summary", "")
                    if reddit_summary:
                        reddit_placeholder.markdown(f'<div class="card">{reddit_summary}</div>', unsafe_allow_html=True)
                    else:
                        reddit_placeholder.warning("‚ö†Ô∏è No Reddit discussions found")
                except requests.exceptions.RequestException:
                    reddit_placeholder.error("‚ùå Failed to fetch Reddit data")

    # News Tab
    with tabs[2]:
        st.markdown("### Latest News")

        if st.button("Get News", key="news_btn", use_container_width=True):
            news_placeholder = st.empty()
            with st.spinner("Gathering news..."):
                try:
                    response = requests.get(f"{REDDIT_BACKEND_URL}/analyze_stock/{company_name}")
                    response.raise_for_status()
                    news_summary = response.json().get("news_summary", "")
                    if news_summary:
                        news_placeholder.markdown(f'<div class="card">{news_summary}</div>', unsafe_allow_html=True)
                    else:
                        news_placeholder.warning("‚ö†Ô∏è No news found")
                except requests.exceptions.RequestException:
                    news_placeholder.error("‚ùå Failed to fetch news")

    # Compact footer for mobile
    st.markdown('<div class="mobile-spacer"></div>', unsafe_allow_html=True)
    st.caption("¬© 2025 AI Equity Analyst | Not financial advice")

else:
    # Simplified error handling for mobile
    st.warning("‚ö†Ô∏è No companies available")

    st.markdown("""
    ### Troubleshooting:
    - Check connection
    - Refresh page
    """)

    if st.button("Retry", use_container_width=True):
        st.experimental_rerun()

# Add a simple navigation menu for mobile users
st.markdown('<div class="mobile-spacer"></div>', unsafe_allow_html=True)
with st.expander("Quick Help"):
    st.markdown("""
    1. Select a company from the dropdown
    2. Choose a tab (Research, Reddit, or News)
    3. Press the button to generate analysis
    """)